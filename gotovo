ФАЙЛ main.py(ниже другие)
import telebot
from config import keys, TOKEN
from extensions import CryptoConverter, ConvertionExceprion

bot = telebot.TeleBot(TOKEN)
@bot.message_handler(commands=['start', 'help'])
def help(message: telebot.types.Message):
    text = ('Что бы начать работу напишите команду боту в следующем формате: \n<имя валюты> '
            '\n<в какаую валюту перевести>'
            '\n<количество переводимой валюту> \nчто бы увидеть список всех доступных валют: /values')
    bot.reply_to(message, text)
@bot.message_handler(commands=['values'])
def values(message: telebot.types.Message):
    text = 'Доступные валюты'
    for key in keys.keys():
         text = '\n'.join((text, key, ))
    bot.reply_to(message, text)
@bot.message_handler(content_types=['text', ])
def converter(message: telebot.types.Message):
    try:
        values = message.text.split(' ')
        if len(values) != 3:
            raise ConvertionExceprion('Введено большое количестов параметров.')

        quoit, base, amount = values
        total_base = CryptoConverter.convert(quoit, base, amount)
    except ConvertionExceprion as e:
        bot.reply_to(message, f'Ошибка пользователя. \n{e}')
    except Exception as e:
        bot.reply_to(message, f'Не удалось обработать команду. \n{e}')
    else:
            text = f'Цена {amount} {quoit} в {base} - {total_base}'
            bot.send_message(message.chat.id, text)

bot.polling()


ФАЙЛ extensions.py

import requests
import json
from config import keys

class ConvertionExceprion(Exception):
    pass

class CryptoConverter:
    @staticmethod
    def convert(quoit: str, base: str, amount: str):
        if quoit == base:
            raise ConvertionExceprion(f'Невозможно перевести одинаковые валюты {base}.')
        try:
            quoit_ticker = keys[quoit]
        except KeyError:
            raise ConvertionExceprion(f'Не удалось обработать валюту {quoit}.')
        try:
            base_ticker = keys[base]
        except KeyError:
            raise ConvertionExceprion(f'Не удалось обработать валюту {base}.')
        try:
            amount = float(amount)
        except ValueError:
            raise ConvertionExceprion(f'Не удалось обработать количество {amount}.')
        r = requests.get(f'https://min-api.cryptocompare.com/data/price?fsym={quoit_ticker}&tsyms={base_ticker}')
        total_base = json.loads(r.content)[keys[base]]
        return total_base

ФАЙЛ config.py:

TOKEN = 'введите свой))'

keys = {
       'Доллар':'USD',
       'Евро':'EUR',
        'Йен':'JPY',
        'Рубль':'RUB',
}
